{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { adapt } from \"../core/AnimatedBlock\";\n\nvar AnimatedConcat = function (_AnimatedNode) {\n  _inherits(AnimatedConcat, _AnimatedNode);\n\n  function AnimatedConcat(input) {\n    _classCallCheck(this, AnimatedConcat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AnimatedConcat).call(this, {\n      type: 'concat',\n      input: input.map(function (n) {\n        return n.__nodeID;\n      })\n    }, input));\n  }\n\n  return AnimatedConcat;\n}(AnimatedNode);\n\nexport function createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new AnimatedConcat(args.map(adapt));\n}","map":{"version":3,"sources":["D:/OSPanel/domains/projects/react_native/demo2/node_modules/react-native-reanimated/src/core/AnimatedConcat.js"],"names":["AnimatedNode","adapt","AnimatedConcat","input","type","map","n","__nodeID","createAnimatedConcat","args"],"mappings":";;;;AAAA,OAAOA,YAAP;AACA,SAASC,KAAT;;IAEMC,c;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,uFACX;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,KAAK,EAAEA,KAAK,CAACE,GAAN,CAAU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,QAAN;AAAA,OAAX;AAAzB,KADW,EAC4CJ,KAD5C;AAElB;;;EAH0BH,Y;;AAM7B,OAAO,SAASQ,oBAAT,GAAuC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC5C,SAAO,IAAIP,cAAJ,CAAmBO,IAAI,CAACJ,GAAL,CAASJ,KAAT,CAAnB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { adapt } from '../core/AnimatedBlock';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    super({ type: 'concat', input: input.map(n => n.__nodeID) }, input);\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"]},"metadata":{},"sourceType":"module"}